version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3110:3100"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - API_BASE_URL=http://localhost:8000
    depends_on:
      - auth-service
      - user-service
      - content-service

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile.dev
    ports:
      - "5001:5000"
    volumes:
      - ./services/auth-service:/app
      - /app/bin
      - /app/obj
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE_URL=Server=db;Database=jnetsolution;User=dev;Password=devpass;
      - JWT_SECRET=your-development-secret-key-min-32-characters-long
    depends_on:
      - db

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile.dev
    ports:
      - "8001:8000"
    volumes:
      - ./services/user-service:/app
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://dev:devpass@db:5432/jnetsolution
    depends_on:
      - db

  content-service:
    build:
      context: ./services/content-service
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    volumes:
      - ./services/content-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://dev:devpass@db:5432/jnetsolution
    depends_on:
      - db

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=jnetsolution
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=devpass
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: