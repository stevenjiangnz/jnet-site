name: Auth Service CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'services/auth-service/**'
      - '.github/workflows/auth-service.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'services/auth-service/**'
      - '.github/workflows/auth-service.yml'

permissions:
  contents: write

env:
  SERVICE_NAME: auth-service
  SERVICE_PATH: ./services/auth-service
  IMAGE_NAME: jnet-auth-service

jobs:
  test:
    runs-on: [self-hosted, linux, x64, host]
    steps:
      - uses: actions/checkout@v4

      - name: Check .NET version
        run: |
          echo "Using .NET version:"
          dotnet --version

      - name: Restore dependencies
        working-directory: ${{ env.SERVICE_PATH }}
        run: dotnet restore

      - name: Build
        working-directory: ${{ env.SERVICE_PATH }}
        run: dotnet build --no-restore

      - name: Test
        working-directory: ${{ env.SERVICE_PATH }}
        run: dotnet test --no-build --verbosity normal

  version:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: [self-hosted, linux, x64, host]
    needs: test
    outputs:
      semVer: ${{ steps.versioning.outputs.new-version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Git Version
        id: version
        uses: codacy/git-version@2.7.1
        with:
          prefix: auth-v
          release-branch: main

      - name: Print Version
        id: versioning
        run: |
          echo "Version: ${{ steps.version.outputs.version }}"
          VERSION_NUMBER=$(echo ${{ steps.version.outputs.version }} | sed 's/^auth-v//')
          echo "Version Number: $VERSION_NUMBER"
          echo "new-version=$VERSION_NUMBER" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Auth Service Release ${{ steps.version.outputs.version }}
          body: |
            Auth Service Release ${{ steps.version.outputs.version }}
            
            Docker image: `${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:${{ steps.versioning.outputs.new-version }}`
            
            ## What's Changed
            See commit history for changes included in this release.
          draft: false
          prerelease: false

  build-and-push:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: [self-hosted, linux, x64, host]
    needs: version
    env:
      SEMVER: ${{ needs.version.outputs.semVer }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.SERVICE_PATH }}
          file: ${{ env.SERVICE_PATH }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:${{ env.SEMVER }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-develop:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: [self-hosted, linux, x64, host]
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.SERVICE_PATH }}
          file: ${{ env.SERVICE_PATH }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:develop
            ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:develop-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max