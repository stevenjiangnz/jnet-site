name: Develop Branch Build and Push

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}  # Fallback to your username if not set

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      auth-service-changed: ${{ steps.changes.outputs.auth-service }}
      user-service-changed: ${{ steps.changes.outputs.user-service }}
      content-service-changed: ${{ steps.changes.outputs.content-service }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          frontend:
            - 'frontend/**'
          auth-service:
            - 'services/auth-service/**'
          user-service:
            - 'services/user-service/**'
          content-service:
            - 'services/content-service/**'

  test-and-build:
    needs: detect-changes
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Frontend tests
    - name: Setup Node.js for Frontend
      if: needs.detect-changes.outputs.frontend-changed == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Frontend - Install and Test
      if: needs.detect-changes.outputs.frontend-changed == 'true'
      run: |
        npm ci
        npm run lint
        npm run build
      working-directory: frontend
    
    # Auth Service tests
    - name: Setup .NET for Auth Service
      if: needs.detect-changes.outputs.auth-service-changed == 'true'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Auth Service - Build and Test
      if: needs.detect-changes.outputs.auth-service-changed == 'true'
      run: |
        dotnet restore
        dotnet build --no-restore
        dotnet test --no-build --verbosity normal
      working-directory: services/auth-service
    
    # User Service tests
    - name: Setup Python for User Service
      if: needs.detect-changes.outputs.user-service-changed == 'true'
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: User Service - Install and Test
      if: needs.detect-changes.outputs.user-service-changed == 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        pytest tests/ --cov=app
      working-directory: services/user-service
    
    # Content Service tests
    - name: Setup Node.js for Content Service
      if: needs.detect-changes.outputs.content-service-changed == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: services/content-service/package-lock.json
        
    - name: Content Service - Install and Test
      if: needs.detect-changes.outputs.content-service-changed == 'true'
      run: |
        npm ci
        npm test
      working-directory: services/content-service

  build-and-push-images:
    needs: [detect-changes, test-and-build]
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      packages: 'write'
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    # Build and push Frontend
    - name: Build and push Frontend Docker image
      if: needs.detect-changes.outputs.frontend-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/jnet-frontend:develop
          ${{ env.DOCKER_USERNAME }}/jnet-frontend:sha-${{ github.sha }}
        cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/jnet-frontend:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_USERNAME }}/jnet-frontend:buildcache,mode=max
    
    # Build and push Auth Service
    - name: Build and push Auth Service Docker image
      if: needs.detect-changes.outputs.auth-service-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./services/auth-service
        file: ./services/auth-service/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/jnet-auth-service:develop
          ${{ env.DOCKER_USERNAME }}/jnet-auth-service:sha-${{ github.sha }}
        cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/jnet-auth-service:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_USERNAME }}/jnet-auth-service:buildcache,mode=max
    
    # Build and push User Service
    - name: Build and push User Service Docker image
      if: needs.detect-changes.outputs.user-service-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./services/user-service
        file: ./services/user-service/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/jnet-user-service:develop
          ${{ env.DOCKER_USERNAME }}/jnet-user-service:sha-${{ github.sha }}
        cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/jnet-user-service:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_USERNAME }}/jnet-user-service:buildcache,mode=max
    
    # Build and push Content Service
    - name: Build and push Content Service Docker image
      if: needs.detect-changes.outputs.content-service-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./services/content-service
        file: ./services/content-service/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/jnet-content-service:develop
          ${{ env.DOCKER_USERNAME }}/jnet-content-service:sha-${{ github.sha }}
        cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/jnet-content-service:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_USERNAME }}/jnet-content-service:buildcache,mode=max