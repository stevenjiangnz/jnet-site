name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
      
    - name: Type check
      run: npm run build
      working-directory: frontend
      
    - name: Lint
      run: npm run lint
      working-directory: frontend

  auth-service-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: |
        dotnet restore
        cd Tests && dotnet restore
      working-directory: services/auth-service
      
    - name: Build
      run: dotnet build --no-restore -c Release
      working-directory: services/auth-service
      
    - name: Test
      run: dotnet test --verbosity normal
      working-directory: services/auth-service/Tests

  user-service-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
      working-directory: services/user-service
      
    - name: Run tests
      run: pytest tests/ --cov=app
      working-directory: services/user-service
      env:
        PYTHONPATH: ${{ github.workspace }}/services/user-service

  content-service-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: services/content-service/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: services/content-service
      
    - name: Run tests
      run: npm test
      working-directory: services/content-service

  docker-build:
    runs-on: ubuntu-latest
    needs: [frontend-tests, auth-service-tests, user-service-tests, content-service-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker images
      run: |
        docker-compose build frontend
        docker-compose build auth-service
        docker-compose build user-service
        docker-compose build content-service