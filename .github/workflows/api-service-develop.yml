name: API Service - Develop
on:
  push:
    branches: [develop]
    paths:
      - 'services/api-service/**'
      - '.github/workflows/api-service-develop.yml'

env:
  SERVICE_NAME: api-service
  SERVICE_PATH: ./services/api-service
  IMAGE_NAME: jnet-api-service

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: 'latest'
      
      - name: Install dependencies
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          uv sync
      
      - name: Run tests
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          uv run pytest tests/ -v
      
      - name: Run linting
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          ./scripts/lint.sh

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}" --password-stdin

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.SERVICE_PATH }}
          file: ${{ env.SERVICE_PATH }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:develop
            ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:develop-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-develop:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: development
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        
      - name: Deploy API Service to Cloud Run (Development)
        run: |
          gcloud run deploy api-service-develop \
            --image docker.io/${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:develop-${{ github.sha }} \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --service-account 506487697841-compute@developer.gserviceaccount.com \
            --set-env-vars="ENVIRONMENT=development,LOG_LEVEL=DEBUG,API_KEY=${{ secrets.DEV_API_SERVICE_KEY }},STOCK_DATA_SERVICE_URL=https://stock-data-service-develop-506487697841.us-central1.run.app,STOCK_DATA_SERVICE_API_KEY=${{ secrets.DEV_STOCK_DATA_SERVICE_API_KEY }}" \
            --memory 512Mi \
            --cpu 1 \
            --port 8002
            
      - name: Get Service URL
        run: |
          SERVICE_URL=$(gcloud run services describe api-service-develop \
            --region us-central1 \
            --format 'value(status.url)')
          echo "API Service (Development) deployed to: $SERVICE_URL"
          echo "### Development Deployment Complete! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "API Service deployed to: $SERVICE_URL" >> $GITHUB_STEP_SUMMARY