name: API Service - Develop
on:
  push:
    branches: [develop]
    paths:
      - 'services/api-service/**'
      - '.github/workflows/api-service-develop.yml'

env:
  SERVICE_NAME: api-service
  SERVICE_PATH: ./services/api-service
  IMAGE_NAME: jnet-api-service

jobs:
  test:
    runs-on: [self-hosted, macOS, mac]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: 'latest'
      
      - name: Install dependencies
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          uv sync
      
      - name: Run tests
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          uv run pytest tests/ -v
      
      - name: Run linting
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          ./scripts/lint.sh

  build:
    needs: test
    runs-on: [self-hosted, macOS, mac]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}" --password-stdin

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.SERVICE_PATH }}
          file: ${{ env.SERVICE_PATH }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:develop
            ${{ secrets.DOCKER_USERNAME || 'stevenjiangnz' }}/${{ env.IMAGE_NAME }}:develop-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max