name: API Service - Production
on:
  push:
    branches: [main]
    paths:
      - 'services/api-service/**'
      - '.github/workflows/api-service-main.yml'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Calculate version
        id: version
        run: |
          # Get latest tag for api-service
          LATEST_TAG=$(git tag -l "api-service-v*" | sort -V | tail -n1)
          if [ -z "$LATEST_TAG" ]; then
            VERSION="1.0.0"
          else
            # Extract version and increment
            CURRENT_VERSION=${LATEST_TAG#api-service-v}
            VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and push Docker image
        run: |
          cd services/api-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/jnet-api-service:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/jnet-api-service:${{ needs.version.outputs.version }} .
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/jnet-api-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/jnet-api-service:${{ needs.version.outputs.version }}
      
      - name: Deploy to Cloud Run
        run: |
          echo ${{ secrets.GCP_SA_KEY }} | base64 -d > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud run deploy api-service \
            --image ${{ secrets.DOCKER_USERNAME }}/jnet-api-service:${{ needs.version.outputs.version }} \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "ENVIRONMENT=production,API_KEY=${{ secrets.API_SERVICE_KEY }}"
      
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: api-service-v${{ needs.version.outputs.version }}
          release_name: API Service v${{ needs.version.outputs.version }}
          draft: false
          prerelease: false